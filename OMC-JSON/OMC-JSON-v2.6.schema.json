{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": "https://movielabs.com/omc/json/schema/v2.6",
  "title": "OMC-JSON Schema v2.6",
  "$comment": "Copyright 2021-2024 Motion Picture Laboratories, Inc.\nSPDX-License-Identifier: APACHE-2.0",
  "oneOf": [
    {"$ref": "#/$defs/core/properties/rootObject"},
    {"$ref": "#/$defs/core/properties/rootEntity"},
    {
      "type": "array",
      "items": {"$ref": "#/$defs/core/properties/rootEntity"}
    }
  ],
  "$defs": {
    "Asset": {
      "type": "object",
      "title": "Asset Definitions",
      "properties": {
        "Asset": {
          "type": "object",
          "title": "Asset",
          "description": "A physical or digital object or collection of objects specific to the creation of the Creative Work.",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Asset"
            },
            "version": {
              "type": [
                "object",
                "null"
              ],
              "title": "Asset Version Information",
              "description": "A particular form, variant, or representation of an Asset that differs in some way from its source Asset.",
              "allOf": [
                {"$ref": "#/$defs/core/properties/baseVersion"}
              ],
              "properties": {
                "DerivationOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Asset/properties/Asset"}
                  ]
                },
                "RevisionOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Asset/properties/Asset"}
                  ]
                },
                "VariantOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Asset/properties/Asset"}
                  ]
                },
                "Alternative": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Asset/properties/Asset"}
                    ]
                  }
                },
                "Derivation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Asset/properties/Asset"}
                    ]
                  }
                },
                "Revision": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Asset/properties/Asset"}
                    ]
                  }
                },
                "Variant": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Asset/properties/Asset"}
                    ]
                  }
                }
              },
              "unevaluatedProperties": false
            },
            "provenance": {
              "$ref": "#/$defs/Utility/properties/provenance",
              "title": "Provenance"
            },
            "Asset": {
              "type": [
                "array",
                "null"
              ],
              "title": "Asset Group",
              "description": "The set of Assets that make up an an asset group and has a structuralType of 'assetGroup'",
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Asset/properties/Asset"}
                ]
              }
            },
            "AssetSC": {
              "title": "Structural Characteristics",
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Asset/properties/AssetSC"}
              ],
              "type": [
                "object",
                "null"
              ]
            },
            "assetFC": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "functionalType": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "controlledValues": [
                    "artwork",
                    "artwork.animatedStoryboard",
                    "artwork.conceptArt",
                    "artwork.storyboard",
                    "audio",
                    "audio.channel",
                    "audio.onSetMix",
                    "audio.track",
                    "cameraMetadata",
                    "capture",
                    "capture.audio",
                    "capture.audio.wild",
                    "capture.calibration",
                    "capture.cameraProxy",
                    "capture.faceCamera",
                    "capture.lidar",
                    "capture.motionCapture",
                    "capture.ocf",
                    "capture.roll",
                    "capture.witnessCamera",
                    "cGModel",
                    "color",
                    "color.cdl",
                    "color.colorSpace",
                    "color.lut",
                    "configuration",
                    "configuration.colorSpace",
                    "costume", 
                    "creativeReferenceMaterial",
                    "lensMetadata",
                    "map",
                    "material",
                    "productionCharacter",
                    "productionProp",
                    "productionProp.productionGreenery",
                    "productionProp.productionVehicle",
                    "productionSetDressing",
                    "productionSetDressing.productionGreenery",
                    "productionSetDressing.productionVehicle",
                    "proxy",
                    "proxy.daily",
                    "proxy.editorial",
                    "recorderMetadata",
                    "script",
                    "sequenceChronologyDescriptor",
                    "shot",
                    "shot.animation",
                    "shot.editorial",
                    "shot.vfx",
                    "technicalReferenceMaterial"
                  ]
                },
                "functionalProperties": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "mapFormat": {"$ref": "#/$defs/Asset/properties/Asset/$defs/mapFormat"},
                    "mapType": {"$ref": "#/$defs/Asset/properties/Asset/$defs/mapType"},
                    "scd": {"$ref": "#/$defs/Asset/properties/Asset/$defs/scd"},
                    "cameraMetadata": {"$ref": "#/$defs/Asset/properties/Asset/$defs/cameraMetadata"},
                    "lensMetadata": {"$ref": "#/$defs/Asset/properties/Asset/$defs/lensMetadata"},
                    "recorderMetadata": {"$ref": "#/$defs/Asset/properties/Asset/$defs/recorderMetadata"},
                    "isSelfContained": {"$ref": "#/$defs/Asset/properties/Asset/$defs/isSelfContained"},
                    "timing": {"$ref": "#/$defs/Asset/properties/Asset/$defs/timing"}
                  }
                },
                "customData": {"$ref": "#/$defs/Utility/properties/customData"}
              }
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "$defs": {
            "scd": {
              "type": "object",
              "properties": {
                "component": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sourceStart": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "sourceEnd": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "recordStart": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "recordEnd": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "duration": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "Shot": {
                        "type": "object",
                        "anyOf": [
                          {"$ref": "#/$defs/core/properties/reference"},
                          {"$ref": "#/$defs/Asset/properties/Asset"}
                        ]
                      }
                    }
                  }
                }
              },
              "additionalProperties": false,
              "deprecated": true
            },
            "mapFormat": {
              "type": [
                "string",
                "null"
              ],
              "title": "Map Format",
              "controlledValues": [
                "plainTexture",
                "shadow",
                "volumeTexture",
                "volumeShadow",
                "latLongEnvironment",
                "cubeFaceShadow",
                "cubeFaceEnvironment"
              ],
              "description": "The data layout of a Map."
            },
            "mapType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Map Type",
              "controlledValues": [
                "diffuse",
                "weightMap",
                "uvMap",
                "specular",
                "roughness",
                "projectionMap",
                "normal",
                "opacity",
                "metalness",
                "heightMap",
                "depthMap",
                "bump",
                "ambientOcclusion",
                "albedo"
              ],
              "description": "Guidance about the intended use of a Map in a Material."
            },
            "cameraMetadata": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "activeSensorPhysicalDimensions": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Active Sensor Physical Dimensions",
                  "description": "Height and width of the active area of the camera sensor"
                },
                "cameraLabel": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Camera Label",
                  "description": "Human readable ID assigned to each production camera."
                },
                "cameraMake": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Camera Make",
                  "description": "The manufacturer or vendor of the camera."
                },
                "cameraModel": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Camera Model",
                  "description": "The manufacturer's name for the camera model. For example, the name of the camera family followed by the name of the variant."
                },
                "cameraUID": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Camera UID",
                  "description": "An alphanumeric code that uniquely identifies the camera among all cameras from all vendors."
                },
                "cameraSerialNumber": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Camera Serial Number",
                  "description": "An alphanumeric code assigned by the manufacturer to a camera."
                },
                "cameraFirmwareVersion": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Camera Firmware Version",
                  "description": "An alphanumeric code that identifies the firmware installed in the camera at the time of recording"
                },
                "captureRate": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Capture Rate",
                  "description": "The number of individual images captured per second."
                },
                "circleTake": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Circle Take",
                  "description": "Indicating whether a recorded sequence of images is considered a candidate for use."
                },
                "exposureIndex": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Exposure Index",
                  "description": "Exposure index is the ISO rating used to determine exposure when the recording was made."
                },
                "fdlLink": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "FDL Link",
                  "description": "Unique identifier of the FDL used by the camera"
                },
                "flipX": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Flip - X",
                  "description": "The flip-X factor indicates whether the image is flipped horizontally."
                },
                "flipY": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Flip - Y",
                  "description": "The flip-Y factor indicates whether the image is flipped vertically."
                },
                "frameHeight": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Frame Height",
                  "description": "The height of the intended image in pixels. This may or may not be the height of the recorded image or the sensor"
                },
                "frameWidth": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Frame Width",
                  "description": "The width of the intended image in pixels. This may or may not be the width of the recorded image or the sensor"
                },
                "isoSpeed": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "ISO Speed",
                  "description": "Arithmetic ISO scale as defined in ISO 12232"
                },
                "lutUID": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "LUT UID",
                  "description": "An alphanumeric code that uniquely identifies the LUT loaded into the camera and applied to the monitor output during shooting."
                },
                "pixelAspectRatio": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Pixel Aspect Ratio",
                  "description": "Describes how the pixels are to be interpreted to correctly display the image."
                },
                "playbackRate": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Playback Rate",
                  "description": "The number of individual images per second of the intended playback speed."
                },
                "roll": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Roll (Dutch)",
                  "description": "The angle of the camera off of the roll axis, measured in degrees when the camera is level."
                },
                "shutterAngle": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Shutter Angle",
                  "description": "A measure of the exposure time of an image relative to the frame rate. 0 < shutter angle <= 360."
                },
                "tilt": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Tilt",
                  "description": "The angle of a camera off its pitch axis, measured in degrees when the camera is level."
                },
                "timecode": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Timecode",
                  "description": "A linear sequence of numeric codes generated at a regular interview and usually recorded in the format: <hour>:<minute>:<second>:<frame>."
                },
                "timecodeEnd": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Timecode - end",
                  "description": "Timecode when recording stopped"
                },
                "timecodeStart": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Timecode - start",
                  "description": "Timecode when recording started"
                },
                "tint": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Tint",
                  "description": "Defines the R/B white points against the green channel."
                },
                "whiteBalance": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "White Balance",
                  "description": "The color temperature of white expressed in degrees Kelvin."
                },
                "reelName": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Reel Name",
                  "description": "A name assigned to a sequence of recorded images"
                },
                "cameraRoll": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Camera Roll",
                  "description": "Identifier for a group of events captured together on the same camera and recording media."
                }
              },
              "additionalProperties": false,
              "title": "Camera Metadata",
              "description": "Capture-specific details and information about the Camera itself."
            },
            "lensMetadata": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": false,
              "title": "Lens Metadata",
              "description": "Capture-specific details and information about the Lens itself.",
              "properties": {
                "tStop": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "T-Stop",
                  "description": "The linear T-number of the lens, equal to the f-number of the lens divided by the square root of the transmittance of the lens."
                },
                "fStop": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "F-Stop",
                  "description": "The linear f-number of the lens, equal to the focal length divided by the diameter of the entrance pupil."
                },
                "entrancePupilPosition": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "focusPosition": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Focus Position",
                  "description": "Focus distance/position of the lens."
                },
                "focalLength": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Focal Length",
                  "description": "The actual focal length of the lens, in millimeters, when the image was captured. With a zoom lens this may be change frame by frame."
                },
                "lensMake": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Lens Make",
                  "description": "The lens manufacturer or vendor."
                },
                "lensModel": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Lens Model",
                  "description": "The lens model identifier assigned by the lens manufacturer or vendor"
                },
                "anamorphicSqueeze": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Anamorphic Squeeze",
                  "description": "Nominal ratio of height to width of the image of an axis-aligned square captured by the camera sensor"
                },
                "lensSerialNumber": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Lens Serial Number",
                  "description": "A number unique to each lens from the same manufacturer or vendor and of the same model."
                },
                "lensFirmwareVersion": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Lens Firmware Version",
                  "description": "Version identifier for the firmware of the lens"
                }
              }
            },
            "recorderMetadata": {
              "type": [
                "object",
                "null"
              ],
              "title": "Recorder Metadata",
              "description": "Information about a Recorder and the recording media.",
              "properties": {
                "recorderFirmwareVersion": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Recorder Firmware Version",
                  "description": "An alphanumeric code that identifies the firmware installed in the recorder at the time of recording."
                },
                "recorderMake": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Recorder Make",
                  "description": "The recorder manufacturer or vendor."
                },
                "recorderModel": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Recorder Model",
                  "description": "The recorder model identifier assigned by the lens manufacturer or vendor."
                },
                "recorderSerialNumber": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Recorder Serial Number",
                  "description": "A number unique to each recorder from the same manufacturer or vendor and of the same model."
                },
                "storageMediaUID": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Storage Media UID",
                  "description": "An alphanumeric code that uniquely identifies the storage media (i.e., mag) the footage was recorded on to."
                }
              },
              "additionalProperties": false
            },
            "isSelfContained": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "Is Self Contained",
              "description": "Indicates the Asset does not depend on other Assets to perform its functional use."
            },
            "timing": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "sourceStart": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "sourceEnd": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "recordStart": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "recordEnd": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "duration": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false
            }
          },
          "unevaluatedProperties": false
        },
        "AssetSC": {
          "type": "object",
          "title": "Asset Structural Characteristics",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "AssetSC"
            },
            "version": {
              "type": [
                "object",
                "null"
              ],
              "allOf": [
                {"$ref": "#/$defs/core/properties/baseVersion"}
              ],
              "properties": {
                "DerivationOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Asset/properties/AssetSC"}
                  ]
                },
                "RepresentationOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Asset/properties/AssetSC"}
                  ]
                },
                "RevisionOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Asset/properties/AssetSC"}
                  ]
                },
                "Deriviation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Asset/properties/AssetSC"}
                    ]
                  }
                },
                "Representation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Asset/properties/AssetSC"}
                    ]
                  }
                },
                "Revision": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Asset/properties/AssetSC"}
                    ]
                  }
                },
                "customData": {"$ref": "#/$defs/Utility/properties/customData"}
              },
              "title": "Asset Structural Version Information",
              "description": "A particular form, variant, or representation of an Asset that differs in some way from its source Asset.",
              "unevaluatedProperties": false
            },
            "provenance": {
              "$ref": "#/$defs/Utility/properties/provenance",
              "title": "Provenance"
            },
            "structuralType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Structural Type",
              "description": "A cannonical description of the the assets form.",
              "controlledValues": [
                "assetGroup",
                "geometry",
                "physical",
                "physical.image",
                "physical.structuredDocument",
                "physical.document",
                "physical.audioVisual",
                "physical.audio",
                "physical.imageSequence",
                "physical.movingImage",
                "digital",
                "digital.movingImage",
                "digital.image",
                "digital.structuredDocument",
                "digital.document",
                "digital.audioVisual",
                "digital.audio",
                "digital.imageSequence",
                "digital.data",
                "digital.procedural"
              ]
            },
            "structuralProperties": {
              "type": [
                "object",
                "null"
              ],
              "title": "Structural Properties",
              "description": "A set of properties that describe the asset in this form.",
              "properties": {
                "assetGroup": {"$ref": "#/$defs/Asset/properties/AssetSC/$defs/assetGroup"},
                "linkset": {"$ref": "#/$defs/Asset/properties/AssetSC/$defs/linkset"},
                "fileDetails": {"$ref": "#/$defs/Asset/properties/AssetSC/$defs/fileDetails"},
                "dimensions": {"$ref": "#/$defs/Asset/properties/AssetSC/$defs/dimensions"},
                "boundingBox": {"$ref": "#/$defs/Utility/properties/boundingBox"},
                "coordinateOrientation": {"$ref": "#/$defs/Utility/properties/coordinateOrientation"},
                "geometryType": {"$ref": "#/$defs/Asset/properties/AssetSC/$defs/geometryType"},
                "levelOfDetail": {"$ref": "#/$defs/Utility/properties/levelOfDetail"},
                "purpose": {"$ref": "#/$defs/Utility/properties/purpose"},
                "scale": {"$ref": "#/$defs/Utility/properties/scale"}
              },
              "additionalProperties": false
            },
            "isAnalog": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "Is Analog",
              "description": "True if the Asset is an Analog Asset."
            },
            "Carrier": {
              "title": "Carrier",
              "description": "For describing the physical storage device on which the digital essence is stored.",
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Infrastructure/properties/Infrastructure"}
              ]
            }
          },
          "required": ["entityType"],
          "description": "Describes the form of an Asset along with the attributes specific to that asset’s form.",
          "$defs": {
            "linkset": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "recordType": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "mediaType": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false,
              "title": "Linkset",
              "description": "When used with resolution system returning a linkset additional information can help disambiguate multiple linksets in the response."
            },
            "fileDetails": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "fileName": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "filePath": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "fileExtension": {
                  "type": [
                    "string",
                    "null"
                  ]
                },
                "mediaType": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "additionalProperties": false,
              "title": "File Details",
              "description": "Where opaque identifiers are used it can be useful to express naming for use in traditional file systems"
            },
            "dimensions": {"$ref": "#/$defs/Utility/properties/unitOfMeasurement/properties/dimensions"},
            "assetGroup": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "isOrdered": {
                  "type": [
                    "boolean",
                    "null"
                  ]
                }
              },
              "additionalProperties": false,
              "title": "Asset Group",
              "description": "Structural properties of an Asset Group"
            },
            "geometryType": {
              "type": [
                "string",
                "null"
              ],
              "controlledValues": [
                "torus",
                "teapot",
                "plane",
                "nurbsSurface",
                "nurbsCurve",
                "mesh",
                "cylinder",
                "cube",
                "cone",
                "capsule",
                "basisCurve"
              ]
            }
          },
          "unevaluatedProperties": false
        }
      },
      "additionalProperties": false
    },
    "Infrastructure": {
      "type": "object",
      "properties": {
        "Infrastructure": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Infrastructure"
            },
            "InfrastructureSC": {
              "title": "Structural Characteristics",
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Infrastructure/properties/InfrastructureSC"}
              ]
            },
            "infrastructureFC": {
              "title": "Functional Characteristics",
              "$ref": "#/$defs/Infrastructure/properties/infrastructureFC"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "title": "Infrastructure",
          "description": "The underlying systems and framework required for the production of the Creative Work; it is generally not specific to a particular Creative Work.",
          "unevaluatedProperties": false
        },
        "InfrastructureSC": {
          "type": "object",
          "title": "Infrastructure Structural Characteristics",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "InfrastructureSC"
            },
            "structuralType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Structural Type",
              "description": "A structured description of the the Infrastructures form"
            },
            "structuralProperties": {
              "type": [
                "object",
                "null"
              ],
              "title": "Structural Properties",
              "description": "A set of properties that describe the infrastructure in this form",
              "properties": {}
            }
          },
          "required": ["entityType"],
          "description": "Describes the form of the Infrastructure along with the attributes specific to that infrastructure's form",
          "unevaluatedProperties": false
        },
        "infrastructureFC": {
          "type": [
            "object",
            "null"
          ],
          "title": "Infrastructure Functional Characteristics",
          "properties": {
            "functionalType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Functional Type",
              "description": "The use or purpose of a Task within the production process."
            },
            "functionalProperties": {
              "type": [
                "object",
                "null"
              ],
              "title": "Functional Properties",
              "description": "A set of properties that describe the tasks functional use",
              "properties": {}
            },
            "customData": {"$ref": "#/$defs/Utility/properties/customData"}
          },
          "additionalProperties": false,
          "description": "Describes the use or purpose of an Infrastructure within the production process"
        }
      },
      "title": "Infrastructure Definitions",
      "additionalProperties": false
    },
    "MediaCreationContext": {
      "type": "object",
      "properties": {
        "Character": {
          "title": "Character",
          "description": "A sentient entity (usually a person but not always) in the script whose specific identity is consequential to the narrative. A Character is generally identified by a specific name.",
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Character"
            },
            "characterType": {
              "title": "characterType",
              "description": "Describes the specific type of Character, equivalent to the sub-class used in OMC-RDF.",
              "default": "character",
              "enum": [
                "character",
                "extra"
              ]
            },
            "characterName": {
              "title": "Character Name",
              "$ref": "#/$defs/Utility/properties/completeName"
            },
            "profile": {
              "type": [
                "object",
                "null"
              ],
              "title": "Profile",
              "properties": {
                "physicalCharacteristics": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "title": "Physical Characteristics",
                  "description": "Allows for the the description of certain physical characteristics on a character, things that might be useful to an art department, wardrobe or casting for example.",
                  "properties": {
                    "species": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "Species",
                      "description": "A species to which this character belongs",
                      "examples": [
                        "Human",
                        "Borg",
                        "Goblin",
                        "Frog"
                      ]
                    },
                    "hairColor": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "Hair Color",
                      "description": "The hair color of the character",
                      "examples": [
                        "Brown",
                        "Pink",
                        "Blonde",
                        ""
                      ]
                    },
                    "hairLength": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "Hair Length",
                      "description": "The length of hair of the character."
                    },
                    "eyeColor": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "Eye Color",
                      "description": "The color of the characters eyes."
                    },
                    "weight": {
                      "title": "weight",
                      "$ref": "#/$defs/Utility/properties/unitOfMeasurement/properties/weight"
                    },
                    "height": {
                      "title": "height",
                      "$ref": "#/$defs/Utility/properties/unitOfMeasurement/properties/linearDistance"
                    }
                  }
                },
                "gender": {"$ref": "#/$defs/Utility/properties/gender"},
                "background": {
                  "title": "background",
                  "oneOf": [
                    {
                      "type": "object",
                      "deprecated": true,
                      "$comment": "This should use the annotation property"
                    },
                    {"$ref": "#/$defs/Utility/properties/annotation"}
                  ],
                  "description": "Additional annotations on a characters background"
                }
              },
              "additionalProperties": false,
              "description": "Specific details describing the character."
            },
            "quantity": {
              "type": [
                "string",
                "number",
                "null"
              ],
              "title": "Quantity",
              "description": "Used to indicate a number of 'extra' characters when required."
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "unevaluatedProperties": false
        },
        "Context": {
          "type": "object",
          "title": "Context",
          "description": "Informs scope within the construction process of a Creative Work.",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Context"
            },
            "contextType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Context Type",
              "description": "A classification of the type of context represented",
              "controlledValues": [
                "narrative",
                "production",
                "shootDay",
                "concept"
              ]
            },
            "contextCategory": {
              "type": [
                "string",
                "null"
              ],
              "title": "Context Category",
              "description": "Provides an additional level of categorization of the Context beyond it's type.",
              "$comment": "Currently considered Beta and only adopted in OMC-JSON"
            },
            "contextProperties": {
              "type": [
                "object",
                "null"
              ],
              "anyOf": [
                {
                  "type": "object",
                  "$ref": "#/$defs/MediaCreationContext/properties/Context/$defs/shootDay"
                }
              ]
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {
                    "type": "object",
                    "$ref": "#/$defs/MediaCreationContext/properties/Context"
                  }
                ]
              }
            },
            "For": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Asset/properties/Asset"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Character"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"},
                  {"$ref": "#/$defs/Participant/properties/Participant"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/SpecialAction"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeAudio"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Effect"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeLocation"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeObject"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeScene"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeStyling"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeWardrobe"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/ProductionLocation"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Slate"}
                ]
              },
              "title": "Context For",
              "description": "The entities for which this Context applies to"
            },
            "contributor": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "Participant": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/Participant/properties/Participant"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "contributesTo": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "CreativeWork": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "features": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "Character": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/Character"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "SpecialAction": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/SpecialAction"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeAudio": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeAudio"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Effect": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/Effect"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeLocation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeLocation"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeObject": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeObject"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeStyling": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeStyling"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeWardrobe": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeWardrobe"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "featuresIn": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "NarrativeScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/NarrativeScene"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "for": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "Asset": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/Asset/properties/Asset"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "CreativeWork": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeScene"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "ProductionScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Sequence": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Slate": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/Slate"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "has": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "Asset": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/Asset/properties/Asset"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Infrastructure": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/$defs/Infrastructure/properties/Infrastructure",
                        "type": "object"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "SpecialAction": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/SpecialAction"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeLocation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeLocation"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeScene"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Participant": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/$defs/Participant/properties/Participant",
                        "type": "object"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "ProductionScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"},
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Sequence": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/$defs/MediaCreationContext/properties/Sequence",
                        "type": "object"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Slate": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "$ref": "#/$defs/MediaCreationContext/properties/Slate",
                        "type": "object"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "neededBy": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "Character": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/Character"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "needs": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "NarrativeAudio": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/NarrativeAudio"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "SpecialAction": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/SpecialAction"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Effect": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/Effect"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeObject": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/NarrativeObject"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeStyling": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/NarrativeStyling"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "NarrativeWardrobe": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/NarrativeWardrobe"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "related": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "ProductionScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "represents": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "NarrativeScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/NarrativeScene"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "representedBy": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "ProductionScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "usedIn": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "Depiction": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/Depiction"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "ProductionLocation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/ProductionLocation"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "ProductionScene": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            },
            "uses": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "Asset": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/Asset/properties/Asset"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Depiction": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/Depiction"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "Infrastructure": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/Infrastructure/properties/Infrastructure"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                },
                "ProductionLocation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "#/$defs/MediaCreationContext/properties/ProductionLocation"
                      },
                      {"$ref": "#/$defs/core/properties/reference"}
                    ]
                  }
                }
              }
            }
          },
          "$defs": {
            "shootDay": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "shootDay": {
                  "type": [
                    "string",
                    "number",
                    "null"
                  ]
                },
                "shootDate": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "$ref": "#/$defs/Utility/properties/time/properties/date"
                }
              }
            }
          },
          "unevaluatedProperties": true,
          "required": ["entityType"]
        },
        "CreativeWork": {
          "type": "object",
          "title": "Creative Work",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "CreativeWork"
            },
            "creativeWorkType": {
              "default": "creativeWork",
              "enum": [
                "creativeWork",
                "series",
                "season",
                "episode"
              ],
              "title": "Creative Work Type"
            },
            "creativeWorkCategory": {
              "enum": [
                null,
                "movie",
                "tv",
                "short",
                "supplemental"
              ],
              "title": "Creative Work Category",
              "description": "The type or form of a Creative Work."
            },
            "seasonNumber": {
              "type": [
                "string",
                "number",
                "null"
              ],
              "title": "Season Number"
            },
            "episodeSequence": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "houseSequence": {
                  "type": [
                    "string",
                    "number",
                    "null"
                  ],
                  "title": "House Sequence",
                  "description": "The internal Episode number assigned by the producer or commissioning broadcaster."
                },
                "distributionNumber": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": [
                          "string",
                          "number",
                          "null"
                        ]
                      },
                      "domain": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    }
                  },
                  "title": "Distribution Number",
                  "description": "The position number of the Episode within its parent Season (or parent Series, if the Episode is directly in a Series) during initial broadcast or distribution."
                }
              },
              "title": "Episode Sequence"
            },
            "title": {
              "title": "Creative Work Title",
              "description": "A name for a Creative Work.",
              "$comment": "Deprecated in favor of 'creativeWorkTitle', with improved functionality",
              "type": "object",
              "properties": {
                "workingTitle": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Creative Work Working Title",
                  "description": "The working title of the work"
                },
                "officialTitle": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Creative Work Official Title",
                  "description": "The official title of the work"
                },
                "internalTitle": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Creative Work Internal Title",
                  "description": "The internal title of the work"
                }
              },
              "deprecated": true
            },
            "creativeWorkTitle": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": "object",
                "properties": {
                  "titleName": {
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "titleType": {
                    "enum": [
                      null,
                      "working",
                      "internal",
                      "regional",
                      "release"
                    ]
                  },
                  "titleLanguage": {"$ref": "#/$defs/Utility/properties/language"}
                }
              }
            },
            "approximateLength": {
              "title": "Approximate Length",
              "$ref": "#/$defs/Utility/properties/time/properties/durationTime"
            },
            "originalLanguage": {
              "type": [
                "array",
                "null"
              ],
              "title": "Original Languages",
              "items": {"$ref": "#/$defs/Utility/properties/language"},
              "description": "The language of languages spoken in the creative work."
            },
            "countryOfOrigin": {
              "type": [
                "array",
                "null"
              ],
              "title": "Country Of Origin",
              "items": {"$ref": "#/$defs/Utility/properties/country"},
              "description": "The home country of the companies that had primary creative control of the creation of the Creative Work, generally the producers."
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            },
            "Series": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"}
                ]
              },
              "title": "Series",
              "description": "Series to which this Creative Work belongs"
            },
            "Season": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"}
                ]
              },
              "title": "Season",
              "description": "Seasons to which this instance of Episode belongs, or that are part are part of this instance of Series."
            },
            "Episode": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"}
                ]
              },
              "title": "Episode",
              "description": "Episodes that belong to this Series or Season described by the instance Creative Work"
            },
            "ProductionCompany": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Participant/properties/Participant"}
                ]
              },
              "title": "Production Company",
              "description": "The Production companies responsible for the production of this Creative Work"
            }
          },
          "required": ["entityType"],
          "description": "A uniquely identified production.",
          "unevaluatedProperties": false
        },
        "Depiction": {
          "type": "object",
          "title": "Depiction",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Depiction"
            },
            "depictionType": {
              "title": "Object type",
              "description": "A categorization of the type of depiction",
              "default": "depiction",
              "enum": [
                "depiction",
                "portrayal"
              ]
            },
            "Depicts": {
              "type": [
                "object",
                "null"
              ],
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/MediaCreationContext/properties/Character"},
                {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeLocation"},
                {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeObject"},
                {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeStyling"},
                {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeWardrobe"}
              ]
            },
            "Depicter": {
              "type": [
                "object",
                "null"
              ],
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Asset/properties/Asset"},
                {"$ref": "#/$defs/Participant/properties/Participant"},
                {"$ref": "#/$defs/Utility/properties/Composition"}
              ]
            },
            "Depictor": {
              "type": [
                "object",
                "null"
              ],
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Asset/properties/Asset"},
                {"$ref": "#/$defs/Participant/properties/Participant"}
              ],
              "deprecated": true,
              "$comment": "Deprecated in favor of Depicter, corrects spelling inconsistancy with core ontology"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "unevaluatedProperties": false,
          "required": ["entityType"],
          "description": "The representation of something from a narrative entity by a production entity in the Creative Work, specified or implied by the Script."
        },
        "Effect": {
          "type": "object",
          "title": "Effect",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Effect"
            },
            "effectType": {
              "title": "effectType",
              "description": "A categorization of the type of effect.",
              "default": "effect",
              "enum": [
                "effect",
                "specialEffect",
                "visualEffect"
              ]
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "An on screen visual effect considered essential to the narrative.",
          "unevaluatedProperties": false
        },
        "NarrativeAudio": {
          "type": "object",
          "title": "Narrative Audio",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "NarrativeAudio"
            },
            "narrativeType": {
              "title": "Narrative Type (narrative audio)",
              "description": "Describes the specific type of Narrative Audio, equivalent to the sub-class used in OMC-RDF.",
              "enum": [
                "narrativeAudio",
                "narrativeMusic",
                "narrativeSoundEffect"
              ],
              "default": "narrativeAudio"
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "A named piece of audio significant to the narrative.",
          "unevaluatedProperties": false
        },
        "NarrativeLocation": {
          "type": "object",
          "title": "Narrative Location",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "NarrativeLocation"
            },
            "narrativeType": {
              "enum": ["narrativeLocation"],
              "title": "narrativeType - narrative location",
              "description": "Describes the specific type of Narrative Location, equivalent to the sub-class used in OMC-RDF.",
              "default": "narrativeLocation"
            },
            "Location": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Utility/properties/Location"}
              ],
              "type": [
                "object",
                "null"
              ]
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "A location specified or implied by the narrative.",
          "unevaluatedProperties": false
        },
        "NarrativeObject": {
          "type": "object",
          "title": "Narrative Object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "NarrativeObject"
            },
            "narrativeType": {
              "title": "narrativeType - narrative object",
              "description": "Describes the specific type of Narrative Object, equivalent to the sub-class used in OMC-RDF.",
              "enum": [
                "narrativeObject",
                "narrativeProp",
                "narrativeGreenery",
                "narrativeVehicle",
                "narrativeSetDressing"
              ],
              "default": "narrativeObject"
            },
            "size": {
              "type": [
                "string",
                "null"
              ],
              "title": "Size"
            },
            "quantity": {
              "type": [
                "string",
                "number",
                "null"
              ],
              "title": "Quantity"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "A named object related to or interacting with characters that is implied or understood to be necessary for the narrative. Includes items like props, wardrobe, set dressing and vehicles.",
          "unevaluatedProperties": false
        },
        "NarrativeScene": {
          "type": "object",
          "title": "Narrative Scene",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "NarrativeScene"
            },
            "narrativeType": {
              "title": "narrativeType - narrative scene",
              "description": "Describes the specific type of Narrative Scene, equivalent to the sub-class used in OMC-RDF.",
              "enum": ["narrativeScene"],
              "default": "narrativeScene"
            },
            "sceneName": {
              "type": [
                "object",
                "null"
              ],
              "title": "Narrative Scene Name",
              "description": "A human readable name for the scene",
              "properties": {
                "fullName": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Scene full name",
                  "description": "A full descriptive name for the scene"
                },
                "altName": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Scene alternate name",
                  "description": "An alternate, often shorter, name used in applications to identify the scenes."
                }
              }
            },
            "sceneNumber": {
              "type": [
                "string",
                "number",
                "null"
              ],
              "title": "Scene Number",
              "description": "A number used in the script to refer to the scene"
            },
            "slugline": {
              "$ref": "#/$defs/Utility/properties/annotation",
              "title": "Slugline",
              "description": "A note describing the slugline or seperate parts of the slugline"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "Taken from the narrative itself and traditionally defined by creative intent and typically a unity of time, place, action, or theme.",
          "unevaluatedProperties": false
        },
        "NarrativeStyling": {
          "type": "object",
          "title": "Narrative Styling",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "NarrativeStyling"
            },
            "narrativeType": {
              "title": "narrativeType - narrative styling",
              "description": "Describes the specific type of Narrative Styling, equivalent to the sub-class used in OMC-RDF.",
              "enum": [
                "narrativeStyling",
                "narrativeHair",
                "narrativeMakeup",
                "narrativeProsthetics"
              ],
              "default": "narrativeStyling"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "Styling required to prepare an actor for their role.",
          "unevaluatedProperties": false
        },
        "NarrativeWardrobe": {
          "type": "object",
          "title": "Narrative Wardrobe",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "NarrativeWardrobe"
            },
            "narrativeType": {
              "title": "narrativeType - narrative wardrobe",
              "description": "Describes the specific type of Narrative Wardrobe, equivalent to the sub-class used in OMC-RDF.",
              "enum": ["narrativeWardrobe"],
              "default": "narrativeWardrobe"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "The clothing for a Character in the narrative.",
          "unevaluatedProperties": false
        },
        "ProductionLocation": {
          "type": "object",
          "title": "Production Location",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "ProductionLocation"
            },
            "locationType": {
              "description": "Describes whether this is production location or more specifically a shooting location",
              "enum": [
                "production",
                "shooting"
              ],
              "default": "production"
            },
            "Location": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Utility/properties/Location"}
              ],
              "type": [
                "object",
                "null"
              ]
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "A real place that is used to depict the Narrative Location or used for creating the production.",
          "unevaluatedProperties": false
        },
        "ProductionScene": {
          "type": "object",
          "title": "Production Scene",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "ProductionScene"
            },
            "sceneName": {
              "title": "Scene Name",
              "$ref": "#/$defs/Utility/properties/basicName"
            },
            "sceneHeader": {
              "type": [
                "string",
                "null"
              ],
              "title": "Scene Header",
              "description": "Used when referring to the Production Scene. It is generally synonymous with Slugline and is used to divide a Script into scenes."
            },
            "sceneDescriptor": {
              "type": [
                "string",
                "null"
              ],
              "title": "Scene Descriptor",
              "description": "An alphanumeric reference to a Production Scene."
            },
            "sceneNumber": {
              "type": [
                "null",
                "string"
              ],
              "title": "Scene Number",
              "description": "A number tied to a Slugline when a Script is locked"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "Defined either by explicit divisions in the structure of the Script, e.g., by a Slugline, or by additional capture for use in the Creative Work that is not tied to any particular Scene in the Script.",
          "unevaluatedProperties": false
        },
        "Slate": {
          "type": "object",
          "title": "Slate",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Slate"
            },
            "slateUID": {
              "type": [
                "string",
                "null"
              ],
              "title": "Slate UID",
              "description": "Slate Unique Identifier"
            },
            "cameraLabel": {
              "type": [
                "string",
                "null"
              ],
              "title": "Camera Label",
              "description": "Label for the Camera responsible for the Capture, usually related to the role and responsibility of the group operating it and usually a single upper-case letter starting with A."
            },
            "cameraUnit": {
              "type": [
                "string",
                "null"
              ],
              "title": "Camera Unit",
              "description": "A group of Participants responsible for shooting some element of a Scene, e.g., a Main Unit or Second Unit."
            },
            "cameraRoll": {
              "type": [
                "string",
                "null"
              ],
              "title": "Camera Roll",
              "description": "Identifier for a group of events captured together on the same camera on the same media."
            },
            "soundRoll": {
              "type": [
                "string",
                "null"
              ],
              "title": "Sound Roll",
              "description": "Identifier for a group of audio events captured together on the same recording device and same media."
            },
            "shootDate": {
              "title": "Shoot Date",
              "$ref": "#/$defs/Utility/properties/time/properties/date",
              "description": "The date of capture or creation"
            },
            "shootDay": {
              "type": [
                "number",
                "string",
                "null"
              ],
              "title": "Shoot Day",
              "description": "The number of the day on the shooting schedule."
            },
            "recordingFPS": {
              "type": [
                "number",
                "null"
              ],
              "title": "Recording FPS",
              "description": "Frames per second recorded by the camera."
            },
            "CreativeWork": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"}
              ],
              "title": "Creative Work"
            },
            "Director": {
              "type": [
                "array",
                "null"
              ],
              "title": "Director",
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Participant/properties/Participant"}
                ]
              }
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "Used to capture key identifying information about what is being recorded on any given setup and take.",
          "unevaluatedProperties": false
        },
        "Sequence": {
          "type": "object",
          "title": "Sequence",
          "deprecated": true,
          "$comment": "Deprecated because Sequence is now part of Composition",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Sequence"
            },
            "provenance": {
              "$ref": "#/$defs/Utility/properties/provenance",
              "title": "Provenance"
            },
            "version": {
              "type": "object",
              "title": "Sequence Version Information",
              "description": "A particular form, variant, or representation of an Asset that differs in some way from its source Asset.",
              "additionalProperties": false,
              "properties": {
                "versionNumber": {
                  "type": [
                    "string",
                    "number",
                    "null"
                  ],
                  "title": "Version Number",
                  "description": "A designation indicating a place in a sequence of versions"
                },
                "name": {
                  "type": "string",
                  "title": "A name for this specific version of the Asset"
                },
                "description": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Asset description",
                  "description": "A human readable description of the version"
                },
                "annotation": {"$ref": "#/$defs/Utility/properties/annotation"},
                "VariantOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"}
                  ]
                },
                "RevisionOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"}
                  ]
                },
                "Variant": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"}
                    ]
                  }
                },
                "Alternative": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"}
                    ]
                  }
                },
                "Revision": {
                  "type": "array",
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"}
                    ]
                  }
                },
                "customData": {"$ref": "#/$defs/Utility/properties/customData"}
              }
            },
            "sequenceType": {
              "title": "Sequence Type",
              "enum": [
                "vfx",
                "editorial",
                "image",
                "animation",
                "color"
              ]
            },
            "SCD": {
              "title": "Sequence Chronology Descriptor",
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Asset/properties/Asset"}
              ]
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "A sequence of shots linked to creative intent.",
          "unevaluatedProperties": false
        },
        "SpecialAction": {
          "type": "object",
          "title": "Special Action",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "oneOf": [
                {
                  "deprecated": true,
                  "$comment": "Deprecated in favor of SpecialAction, correcting a bug in the release",
                  "title": "Entity Type",
                  "const": "NarrativeAction"
                },
                {
                  "title": "Entity Type",
                  "const": "SpecialAction"
                }
              ]
            },
            "specialActionType": {
              "title": "specialActionType",
              "description": "A categorization of the type action.",
              "enum": [
                "stunt",
                "choreography",
                "fight",
                "motionCapture",
                "marine",
                "aerial",
                "specialAction"
              ],
              "default": "specialAction"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "An action or set of actions that are performed and require additional choreography or supervision.",
          "unevaluatedProperties": false
        }
      },
      "additionalProperties": false,
      "title": "Media Creation Context Definitions"
    },
    "Participant": {
      "type": "object",
      "title": "Participant Definitions",
      "properties": {
        "Participant": {
          "type": "object",
          "title": "Participant",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Participant"
            },
            "ParticipantSC": {
              "type": [
                "object",
                "null"
              ],
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Participant/properties/Person"},
                {"$ref": "#/$defs/Participant/properties/Department"},
                {"$ref": "#/$defs/Participant/properties/Organization"},
                {"$ref": "#/$defs/Participant/properties/Service"}
              ],
              "title": "Participant Structural Characteristics",
              "description": "Describes the form of a Participant along with the attributes specific to that Participant’s form."
            },
            "participantFC": {
              "type": [
                "object",
                "null"
              ],
              "title": "Participant Functional Characteristics",
              "properties": {
                "functionalType": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Functional Type"
                },
                "jobTitle": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Job Title",
                  "description": "A formal name for the position a Person holds in relation to the production, usually associated with a specific set of responsibilities."
                },
                "Role": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "description": "The combination of a Task and the Participant responsible for it.",
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Participant/properties/Role"}
                    ]
                  },
                  "title": "Role"
                },
                "customData": {"$ref": "#/$defs/Utility/properties/customData"}
              },
              "additionalProperties": false,
              "description": "The use or purpose of a Participant within the production process"
            },
            "contact": {
              "title": "Participant Contact",
              "$ref": "#/$defs/Utility/properties/contact",
              "description": "Contact information for the Participant",
              "deprecated": true,
              "$comment": "Contact should be on the Participants structural characteristics"
            },
            "Participant": {
              "type": [
                "array",
                "null"
              ],
              "title": "Participant Group",
              "description": "Any Participants that are members of this Participant group",
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Participant/properties/Participant"}
                ]
              }
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "description": "The entities (people, organizations, and services) that are responsible for the production of the Creative Work.",
          "unevaluatedProperties": false
        },
        "Person": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Person"
            },
            "structuralType": {
              "const": "person",
              "$comment": "Included for possible future extensions",
              "title": "Person's Structural Type"
            },
            "jobTitle": {
              "type": [
                "string",
                "null"
              ],
              "title": "Person's Job Title",
              "description": "A persons job title (as distinct from a specific role)."
            },
            "Location": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Utility/properties/Location"}
              ],
              "type": [
                "object",
                "null"
              ]
            },
            "gender": {
              "$ref": "#/$defs/Utility/properties/gender",
              "title": "Person's Gender"
            },
            "contact": {
              "$ref": "#/$defs/Utility/properties/contact",
              "title": "Person's Contact",
              "description": "Contact information for the Person"
            },
            "personName": {
              "$ref": "#/$defs/Utility/properties/completeName",
              "title": "Person's Name",
              "description": "The canonical name or set of names and titles for the Person"
            }
          },
          "required": ["entityType"],
          "title": "Person",
          "description": "People are the individuals that are associated with the production",
          "unevaluatedProperties": false
        },
        "Department": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Department"
            },
            "structuralType": {
              "const": "department",
              "$comment": "Included for possible future extensions",
              "title": "Department's Structural Type"
            },
            "departmentName": {
              "$ref": "#/$defs/Utility/properties/basicName",
              "title": "Department's Name"
            },
            "contact": {
              "$ref": "#/$defs/Utility/properties/contact",
              "title": "Department's Contact"
            },
            "Location": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Utility/properties/Location"}
              ],
              "type": [
                "object",
                "null"
              ]
            }
          },
          "required": ["entityType"],
          "title": "Department",
          "description": "Part of a larger Organization with a particular set of responsibilities on the production.",
          "unevaluatedProperties": false
        },
        "Organization": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Organization"
            },
            "structuralType": {
              "const": "organization",
              "$comment": "Included for possible future extensions",
              "title": "Organization's Structural Type"
            },
            "organizationName": {
              "$ref": "#/$defs/Utility/properties/basicName",
              "title": "Organization's Name"
            },
            "contact": {
              "$ref": "#/$defs/Utility/properties/contact",
              "title": "Organization's Contact"
            },
            "Location": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Utility/properties/Location"}
              ],
              "type": [
                "object",
                "null"
              ]
            }
          },
          "required": ["entityType"],
          "title": "Organization",
          "description": "A legal entity or groups of people associated with the production.. with a particular purpose relative to the production.",
          "unevaluatedProperties": false
        },
        "Service": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Service"
            },
            "structuralType": {
              "const": "service",
              "$comment": "Included for possible future extensions",
              "title": "Service's Structural Type"
            },
            "serviceName": {
              "$ref": "#/$defs/Utility/properties/basicName",
              "title": "Service's Name"
            },
            "contact": {
              "$ref": "#/$defs/Utility/properties/contact",
              "title": "Service's Contact"
            }
          },
          "required": ["entityType"],
          "title": "Service",
          "description": "A computer driven agent that can perform tasks given the proper context and structured data.",
          "unevaluatedProperties": false
        },
        "Role": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Role"
            },
            "roleType": {
              "type": "string",
              "title": "Role Type",
              "description": "The specific role, typically used in authorization systems",
              "$comment": "A set of controlled values is planned for a future release"
            }
          },
          "required": ["entityType"],
          "title": "Role",
          "description": "A set of properties that define the role of a participant within the production",
          "unevaluatedProperties": false
        }
      },
      "additionalProperties": false
    },
    "Task": {
      "type": "object",
      "properties": {
        "Task": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Task"
            },
            "TaskSC": {
              "title": "Task Structural Characteristics",
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Task/properties/TaskSC"}
              ]
            },
            "taskFC": {
              "title": "Task Functional Characteristics",
              "$ref": "#/$defs/Task/properties/taskFC"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "title": "Task",
          "description": "A piece of work to be done and completed as a step in the production process.",
          "required": ["entityType"],
          "unevaluatedProperties": false
        },
        "TaskSC": {
          "type": "object",
          "title": "Task Structural Characteristics",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "TaskSC"
            },
            "structuralType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Task Structural Type",
              "description": "A structured description of the the Tasks form"
            },
            "structuralProperties": {
              "type": [
                "object",
                "null"
              ],
              "title": "Structural Properties",
              "description": "A set of properties that describe the Task in this form",
              "properties": {
                "customData": {"$ref": "#/$defs/Utility/properties/customData"}
              }
            }
          },
          "required": ["entityType"],
          "description": "Describes the form of Task along with the attributes specific to that task’s form",
          "unevaluatedProperties": false
        },
        "taskFC": {
          "type": [
            "object",
            "null"
          ],
          "title": "Task Functional Characteristics",
          "properties": {
            "functionalType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Functional Type",
              "description": "The use or purpose of a Task within the production process."
            },
            "functionalProperties": {
              "type": [
                "object",
                "null"
              ],
              "title": "Functional Properties",
              "description": "A set of properties that describe the tasks functional use",
              "properties": {
                "customData": {"$ref": "#/$defs/Utility/properties/customData"}
              }
            },
            "customData": {"$ref": "#/$defs/Utility/properties/customData"}
          },
          "additionalProperties": true,
          "description": "Describes the purpose of the Task within the production process"
        }
      },
      "title": "Task Definitions",
      "additionalProperties": false
    },
    "Utility": {
      "type": "object",
      "properties": {
        "Composition": {
          "type": "object",
          "title": "Composition",
          "description": "A set of Assets or other Compositions that can be combined to produce a new Asset.",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Composition"
            },
            "version": {
              "type": [
                "object",
                "null"
              ],
              "allOf": [
                {"$ref": "#/$defs/core/properties/baseVersion"}
              ],
              "properties": {
                "DerivationOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Utility/properties/Composition"}
                  ]
                },
                "RevisionOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Utility/properties/Composition"}
                  ]
                },
                "VariantOf": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Utility/properties/Composition"}
                  ]
                },
                "Alternative": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Utility/properties/Composition"}
                    ]
                  }
                },
                "Derivation": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Utility/properties/Composition"}
                    ]
                  }
                },
                "Revision": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Utility/properties/Composition"}
                    ]
                  }
                },
                "Variant": {
                  "type": [
                    "array",
                    "null"
                  ],
                  "items": {
                    "anyOf": [
                      {"$ref": "#/$defs/core/properties/reference"},
                      {"$ref": "#/$defs/Utility/properties/Composition"}
                    ]
                  }
                }
              },
              "unevaluatedProperties": false
            },
            "provenance": {
              "$ref": "#/$defs/Utility/properties/provenance",
              "title": "Provenance"
            },
            "compositionType": {
              "type": [
                "string",
                "null"
              ],
              "title": "Composition Type",
              "description": "The type, or sub-class, that this specific Composition represents.",
              "controlledValues": [
                "cgAssembly",
                "geometryAssembly",
                "compositeMaterial",
                "sequence",
                "sequence.vfx",
                "sequence.vfxImage",
                "sequence.editorial",
                "sequence.color",
                "sequence.animation"
              ]
            },
            "compositionProperties": {
              "type": [
                "object",
                "null"
              ],
              "title": "Composition Properties",
              "properties": {
                "boundingBox": {"$ref": "#/$defs/Utility/properties/boundingBox"},
                "coordinateOrientation": {"$ref": "#/$defs/Utility/properties/coordinateOrientation"},
                "levelOfDetail": {"$ref": "#/$defs/Utility/properties/levelOfDetail"},
                "purpose": {"$ref": "#/$defs/Utility/properties/purpose"},
                "scale": {"$ref": "#/$defs/Utility/properties/scale"}
              }
            },
            "Asset": {
              "type": [
                "array",
                "null"
              ],
              "title": "Asset",
              "description": "A set of Assets that are included in this Composition.",
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Asset/properties/Asset"}
                ]
              }
            },
            "AssetSC": {
              "type": [
                "array",
                "null"
              ],
              "title": "Asset Structural Characteristics",
              "description": "A set of Asset Structural Characteristics that are included in this Composition.",
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Asset/properties/AssetSC"}
                ]
              }
            },
            "Composition": {
              "type": [
                "array",
                "null"
              ],
              "title": "Composition Group",
              "description": "The set of Compositions that are included in this Composition.",
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/Utility/properties/Composition"}
                ]
              }
            },
            "StartHere": {
              "type": [
                "object",
                "null"
              ],
              "title": "Start Here",
              "description": "Start point for assembling the Composition, the Asset that contains the instructions for the Composition.",
              "anyOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Asset/properties/Asset"},
                {"$ref": "#/$defs/Asset/properties/AssetSC"}
              ]
            },
            "Depiction": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
                ]
              }
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "unevaluatedProperties": false,
          "required": ["entityType"]
        },
        "Location": {
          "type": "object",
          "allOf": [
            {"$ref": "#/$defs/core/properties/baseEntity"}
          ],
          "properties": {
            "entityType": {
              "title": "Entity Type",
              "const": "Location"
            },
            "address": {
              "title": "Address",
              "$ref": "#/$defs/Utility/properties/address"
            },
            "coordinates": {
              "title": "Coordinates",
              "$ref": "#/$defs/Utility/properties/coordinates"
            },
            "Context": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "anyOf": [
                  {"$ref": "#/$defs/core/properties/reference"},
                  {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
                ]
              }
            }
          },
          "required": ["entityType"],
          "title": "Location",
          "description": "A particular place or position either in either the real world or the narrative world.",
          "unevaluatedProperties": false
        },
        "annotation": {
          "type": [
            "array",
            "null"
          ],
          "title": "Annotation",
          "items": {
            "type": "object",
            "properties": {
              "author": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "Author",
                "description": "Who wrote or added this annotation."
              },
              "title": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "Title",
                "description": "A title for the note or annotation."
              },
              "text": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "Text",
                "description": "The text of the note or annotation."
              }
            },
            "additionalProperties": false
          },
          "description": "Human readable commentary, explanation, or information."
        },
        "customData": {
          "type": [
            "object",
            "null"
          ],
          "title": "Custom Data",
          "description": "A user defined set of custom data in the payload of the instance, used where the formal schema lacks required properties."
        },
        "identifier": {
          "type": "array",
          "title": "Identifier",
          "description": "An identifier uniquely identifies an entity within a particular scope.",
          "items": {
            "type": "object",
            "properties": {
              "identifierScope": {
                "type": "string",
                "title": "Identifier Scope",
                "description": "The universe within which an identifier is valid and unique."
              },
              "identifierValue": {
                "type": "string",
                "title": "Identifier Value",
                "description": "A string of characters that uniquely identifies an object within a particular scope."
              },
              "combinedForm": {
                "type": "string",
                "title": "Identifier Combined Form",
                "description": "A combination of the Identifier Scope and Value that is useful for utilizing the identifier in a system.",
                "examples": ["URN:ID:IdentifierScope:IdentifierValue"]
              },
              "url": {
                "type": "string",
                "title": "URL",
                "description": "A URL or IRI that can be used for resolving the Identifier Value within the Identifier Scope."
              }
            },
            "additionalProperties": false,
            "required": [
              "identifierScope",
              "identifierValue"
            ]
          },
          "minItems": 1
        },
        "language": {
          "type": [
            "string",
            "null"
          ],
          "title": "Language",
          "description": "An IETF BCP 47 language code."
        },
        "tag": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": "object",
            "properties": {
              "domain": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "Domain",
                "description": "An indication of the set or system in which the tag values are relevant or defined."
              },
              "value": {
                "title": "Value",
                "description": "A set of tags taken from the domain.",
                "items": {
                  "type": [
                    "string",
                    "number",
                    "null"
                  ]
                },
                "type": [
                  "array",
                  "null"
                ]
              }
            },
            "additionalProperties": false
          },
          "title": "Tag",
          "description": "A short string from a particular set, used for categorization and description"
        },
        "address": {
          "type": [
            "object",
            "null"
          ],
          "title": "Address",
          "properties": {
            "street": {
              "type": [
                "string",
                "null"
              ],
              "title": "Street Address",
              "description": "The street address",
              "examples": ["1600 Amphitheater Parkway"]
            },
            "locality": {
              "type": [
                "string",
                "null"
              ],
              "title": "Address locality",
              "description": "The locality in which the street address is, and which is in the region.",
              "examples": ["Mountain View"]
            },
            "region": {
              "type": [
                "string",
                "null"
              ],
              "title": "Address region",
              "description": "The region in which the locality is, and which is in the country.",
              "examples": ["California"]
            },
            "postalCode": {
              "type": [
                "string",
                "null"
              ],
              "title": "Zip or Postal Code",
              "description": "A zip or postal code.",
              "examples": ["94534"]
            },
            "country": {
              "title": "Country",
              "$ref": "#/$defs/Utility/properties/country"
            }
          },
          "additionalProperties": false,
          "description": "A postal address or identifiable location of a place or building"
        },
        "country": {
          "type": [
            "string",
            "null"
          ],
          "title": "Country",
          "description": "An ISO 3166-1 alpha-2 country code.",
          "examples": ["US"],
          "pattern": "^[A-Z][A-Z]$"
        },
        "coordinates": {
          "type": [
            "object",
            "null"
          ],
          "title": "Coordinates",
          "description": "A global positioning coordinate in compliance with WGS 84",
          "properties": {
            "latitude": {
              "type": [
                "number",
                "null"
              ],
              "title": "Latitude",
              "minimum": -90,
              "maximum": 90
            },
            "longitude": {
              "type": [
                "number",
                "null"
              ],
              "title": "Longitude",
              "minimum": -180,
              "maximum": 180
            }
          },
          "additionalProperties": false
        },
        "contact": {
          "type": [
            "object",
            "null"
          ],
          "title": "Contact",
          "properties": {
            "email": {
              "title": "Email",
              "$ref": "#/$defs/Utility/properties/email"
            },
            "telephone": {
              "title": "Telephone",
              "$ref": "#/$defs/Utility/properties/telephone"
            }
          },
          "additionalProperties": false,
          "description": "Means by which the subject of an entity may be contacted in the production."
        },
        "email": {
          "type": [
            "object",
            "null"
          ],
          "title": "Email",
          "properties": {
            "business": {
              "type": [
                "string",
                "null"
              ],
              "title": "Business"
            },
            "personal": {
              "type": [
                "string",
                "null"
              ],
              "title": "Personal"
            }
          },
          "additionalProperties": false
        },
        "telephone": {
          "type": [
            "object",
            "null"
          ],
          "title": "Telephone",
          "properties": {
            "business": {
              "type": [
                "string",
                "null"
              ],
              "title": "Business"
            },
            "personal": {
              "type": [
                "string",
                "null"
              ],
              "title": "Personal"
            }
          },
          "additionalProperties": false
        },
        "gender": {
          "type": [
            "object",
            "null"
          ],
          "title": "Gender",
          "properties": {
            "gender": {
              "title": "Identifies as gender",
              "description": "The gender by which an individual identifies",
              "enum": [
                null,
                "male",
                "female",
                "other",
                "unknown"
              ]
            },
            "genderPronoun": {
              "title": "Preferred pronoun",
              "description": "An individuals pronoun of choice.",
              "enum": [
                "he/him",
                "she/her",
                "ze/hir",
                "they/their",
                null
              ]
            }
          },
          "additionalProperties": false,
          "description": "A person, or others, expressed or preferred gender and pronoun."
        },
        "basicName": {
          "type": [
            "object",
            "null"
          ],
          "title": "Basic Name",
          "properties": {
            "fullName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Full Name",
              "description": "The full an complete name of the entity."
            },
            "altName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Alternate Name",
              "description": "An alternate, often shortened name for the entity."
            }
          },
          "additionalProperties": false,
          "description": "A canonical name and alternative name for the entity."
        },
        "completeName": {
          "type": [
            "object",
            "null"
          ],
          "title": "Complete Name",
          "properties": {
            "firstGivenName": {
              "type": [
                "string",
                "null"
              ],
              "title": "First Given Name",
              "description": "A person's first name, also referred to as given name."
            },
            "secondGivenName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Second Given Name",
              "description": "A persons second given name, also referred to as middle name."
            },
            "familyName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Family Name",
              "description": "A persons family name, also referred to as surname."
            },
            "fullName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Full Name",
              "description": "A complete name, typically a conjunction of familyName, firstGivenName and possibly other fields."
            },
            "birthName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Birth Name",
              "description": "A persons name at birth, also referred to as maiden name."
            },
            "primaryName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Primary Name",
              "description": "A persons primary name, one they typically use, also often a combination of first, second and family name."
            },
            "pseudonym": {
              "type": [
                "string",
                "null"
              ],
              "title": "Pseudonym"
            },
            "altName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Alternate Name"
            },
            "translatedName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Translated Name"
            },
            "nickname": {
              "type": [
                "string",
                "null"
              ],
              "title": "Nickname"
            },
            "moniker": {
              "type": [
                "string",
                "null"
              ],
              "title": "Moniker"
            },
            "alias": {
              "type": [
                "string",
                "null"
              ],
              "title": "Alias",
              "description": "An alias being used by a person often used to disguise someones real identity, sometimes used when booking hotel rooms or restaurants."
            },
            "contractualName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Contractual Name"
            },
            "displayName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Display Name"
            },
            "sortName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Sort Name"
            },
            "scriptName": {
              "type": [
                "string",
                "null"
              ],
              "title": "Script Name"
            },
            "prefix": {
              "type": [
                "string",
                "null"
              ],
              "title": "Prefix",
              "description": "A prefix that can indicate a persons gender or title",
              "examples": [
                "Mrs",
                "Mr",
                "Dr",
                "General"
              ]
            },
            "suffix": {
              "type": [
                "string",
                "null"
              ],
              "title": "Suffix",
              "description": "A suffix, often used to indicate a title or classification",
              "examples": [
                "MBE",
                "MD",
                "RN",
                "II",
                "IV"
              ]
            }
          },
          "additionalProperties": false,
          "description": "A detailed description of a person, or others, name and variants of their name."
        },
        "time": {
          "type": [
            "object",
            "null"
          ],
          "title": "Time",
          "additionalProperties": false,
          "properties": {
            "timestamp": {
              "type": [
                "number",
                "null"
              ],
              "title": "Timestamp"
            },
            "periodInTime": {
              "type": [
                "object",
                "null"
              ],
              "title": "Period in Time",
              "properties": {
                "startTime": {
                  "type": "string",
                  "title": "Start Time"
                },
                "durationTime": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Duration of Time"
                },
                "endTime": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "End Time"
                }
              },
              "additionalProperties": false,
              "required": ["startTime"]
            },
            "descriptiveTime": {
              "type": [
                "object",
                "null"
              ],
              "title": "Descriptive Time",
              "properties": {
                "periodInDay": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Period in Day",
                  "examples": [
                    "Morning",
                    "Noon",
                    "Midnight",
                    "Afternoon",
                    "Night"
                  ]
                },
                "relativeTime": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Relative Time",
                  "examples": [
                    "Later",
                    "Continuous",
                    "6 months earlier",
                    "A long time ago"
                  ]
                },
                "periodInTime": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Period in Time",
                  "examples": [
                    "Ming dynasty",
                    "World War II",
                    "Jurassic period",
                    "20th century"
                  ]
                },
                "eventInTime": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Event in Time",
                  "description": "Describes a specific event that occurred",
                  "examples": [
                    "Hindenburg disaster",
                    "World Trade Center attack",
                    "Queen Elizabeth coronation"
                  ]
                }
              },
              "additionalProperties": false
            },
            "dateTime": {
              "type": [
                "string",
                "null"
              ],
              "title": "Date & Time",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})$",
              "description": "Should be formatted to comply with ISO 8601",
              "examples": ["2023-08-24T20:51:15Z\n2023-08-24T20:51:15.56Z\n2023-08-24T20:51:15+08:00\n2023-08-24T20:51:15.23-04:00"]
            },
            "date": {
              "type": [
                "string",
                "null"
              ],
              "title": "Date",
              "pattern": "\\d{4}-[01]\\d-[0-3]\\d",
              "examples": ["2020-11-21"],
              "description": "Should be formatted to comply with ISO 8601"
            },
            "durationTime": {
              "title": "Duration of Time",
              "type": [
                "string",
                "null"
              ],
              "pattern": "^(-?)P(?=.)((\\d+)Y)?((\\d+)M)?((\\d+)D)?(T(?=.)((\\d+)H)?((\\d+)M)?(\\d*(\\.\\d+)?S)?)?$",
              "examples": ["P2Y12M3D"],
              "description": "Should be formatted to comply with ISO 8601"
            },
            "timecode": {
              "type": [
                "string",
                "null"
              ],
              "title": "SMPTE Timecode",
              "pattern": "^([01]\\d|2[0-3]):([0-5]\\d):([0-5]\\d):([0-2]\\d)$",
              "examples": ["00:03:43:12"],
              "description": "SMPTE Timecode in the format HH:MM:SS:FF. \nAssumes the frame rate is 23.98, 24, 25, 29.97 NDF, or 30"
            }
          }
        },
        "unitOfMeasurement": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "weight": {
              "title": "weight",
              "description": "Encode a measurement of weight using the imperial or metric system",
              "oneOf": [
                {"type": "null"},
                {
                  "type": "string",
                  "description": "Encode weight using the metric system of measurement (kilogram, gram)",
                  "pattern": "^(\\d+kg)?(\\d+g)?$",
                  "examples": ["3kg7g"]
                },
                {
                  "type": "string",
                  "description": "Encode weight using the imperial system of measurement (pounds, ounces)",
                  "pattern": "^(\\d+lb)?(\\d+oz)?$",
                  "examples": ["12lb14oz"]
                }
              ]
            },
            "dimensions": {
              "type": [
                "object",
                "null"
              ],
              "title": "dimensions",
              "description": "Encode a set of measurements to describe a 2 or 3 dimensional object (metric, imperial or pixels)",
              "properties": {
                "height": {
                  "description": "The height or X axis of the object",
                  "oneOf": [
                    {"type": "null"},
                    {
                      "description": "Encode distance using the metric system of measurement (kilometer, meter, centimetre, millimeter",
                      "pattern": "^-?(\\d+km)?(\\d+m)?(\\d+cm)?(\\d+mm)?$",
                      "examples": [
                        "100m",
                        "6km2m56cm12mm"
                      ],
                      "type": "string"
                    },
                    {
                      "description": "Encode distance using the imperial system of measurement (miles, feet, inches)",
                      "pattern": "^-?(\\d+mi)?(\\d+ft)?(\\d+in)?$",
                      "examples": [
                        "2000ft",
                        "2mi12ft6in"
                      ],
                      "type": "string"
                    },
                    {
                      "description": "Encode a measurement of the number of pixels, typically in a digital image",
                      "pattern": "^(\\d+px)$",
                      "examples": ["250px"],
                      "type": "string"
                    }
                  ]
                },
                "width": {
                  "description": "The width or X axis of the object",
                  "oneOf": [
                    {"type": "null"},
                    {
                      "type": "string",
                      "description": "Encode distance using the metric system of measurement (kilometer, meter, centimetre, millimeter",
                      "pattern": "^-?(\\d+km)?(\\d+m)?(\\d+cm)?(\\d+mm)?$",
                      "examples": [
                        "100m",
                        "6km2m56cm12mm"
                      ]
                    },
                    {
                      "type": "string",
                      "description": "Encode distance using the imperial system of measurement (miles, feet, inches)",
                      "pattern": "^-?(\\d+mi)?(\\d+ft)?(\\d+in)?$",
                      "examples": [
                        "2000ft",
                        "2mi12ft6in"
                      ]
                    },
                    {
                      "type": "string",
                      "description": "Encode a measurement of the number of pixels, typically in a digital image",
                      "pattern": "^(\\d+px)$",
                      "examples": ["250px"]
                    }
                  ]
                },
                "depth": {
                  "description": "The depth or Z axis of the object",
                  "oneOf": [
                    {"type": "null"},
                    {
                      "type": "string",
                      "description": "Encode distance using the metric system of measurement (kilometer, meter, centimetre, millimeter",
                      "pattern": "^-?(\\d+km)?(\\d+m)?(\\d+cm)?(\\d+mm)?$",
                      "examples": [
                        "100m",
                        "6km2m56cm12mm"
                      ]
                    },
                    {
                      "type": "string",
                      "description": "Encode distance using the imperial system of measurement (miles, feet, inches)",
                      "pattern": "^-?(\\d+mi)?(\\d+ft)?(\\d+in)?$",
                      "examples": [
                        "2000ft",
                        "2mi12ft6in"
                      ]
                    },
                    {
                      "type": "string",
                      "description": "Encode a measurement of the number of pixels, typically in a digital image",
                      "pattern": "^(\\d+px)$",
                      "examples": ["250px"]
                    }
                  ]
                }
              }
            },
            "linearDistance": {
              "title": "Linear Distance",
              "description": "Encode a measurement of distance using the imperial or metric system",
              "oneOf": [
                {"type": "null"},
                {
                  "type": "string",
                  "description": "Encode distance using the metric system of measurement (kilometer, meter, centimetre, millimeter",
                  "pattern": "^-?(\\d+km)?(\\d+m)?(\\d+cm)?(\\d+mm)?$",
                  "examples": [
                    "100m",
                    "6km2m56cm12mm"
                  ]
                },
                {
                  "type": "string",
                  "description": "Encode distance using the imperial system of measurement (miles, feet, inches)",
                  "pattern": "^-?(\\d+mi)?(\\d+ft)?(\\d+in)?$",
                  "examples": [
                    "2000ft",
                    "2mi12ft6in"
                  ]
                }
              ]
            }
          },
          "additionalProperties": false
        },
        "boundingBox": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "corner1": {"$ref": "#/$defs/Utility/properties/point3"},
            "corner2": {"$ref": "#/$defs/Utility/properties/point3"}
          },
          "title": "Bounding Box",
          "description": "The minimum axis-aligned right rectangular prism in the local space of the Geometry that fully encloses the Geometry."
        },
        "coordinateOrientation": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "handedness": {
              "enum": [
                null,
                "left",
                "right"
              ]
            },
            "upAxis": {
              "enum": [
                null,
                "y-up",
                "z-up"
              ]
            }
          },
          "title": "Coordinate Orientation",
          "description": "The direction and handedness of the axes used in the geometry."
        },
        "levelOfDetail": {
          "type": [
            "integer",
            "null"
          ],
          "maximum": 100,
          "minimum": 1,
          "title": "Level of Detail",
          "description": "Percentage of the screen that an object can reasonably take up."
        },
        "point2": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "x": {"type": "number"},
            "y": {"type": "number"}
          },
          "title": "Point 2",
          "description": "A point with two coordinates."
        },
        "point3": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "x": {"type": "number"},
            "y": {"type": "number"},
            "z": {"type": "number"}
          },
          "title": "Point 3",
          "description": "A point with three coordinates."
        },
        "scale": {
          "$ref": "#/$defs/Utility/properties/unitOfMeasurement/properties/linearDistance",
          "title": "Scale",
          "description": "The number of “real” units represented by a single unit in the coordinate space of the Geometry."
        },
        "purpose": {
          "type": [
            "string",
            "null"
          ],
          "title": "Purpose (Geometry)",
          "description": "A suggested or intended use for the object in a pipeline.",
          "controlledValues": [
            "printing",
            "general",
            "annotation",
            "matte/paint",
            "guide",
            "collision",
            "rendering",
            "proxy"
          ]
        },
        "materialType": {
          "type": [
            "string",
            "null"
          ],
          "controlledValues": [
            "gasOrLiquid",
            "gasOrLiquid.fire",
            "gasOrLiquid.oil",
            "gasOrLiquid.water",
            "gasOrLiquid.fog",
            "gasOrLiquid.atmosphere",
            "inorganic",
            "inorganic.plastic",
            "inorganic.metal",
            "inorganic.glass",
            "inorganic.stone",
            "textile",
            "textile.wool",
            "textile.silk",
            "textile.cotton",
            "organic",
            "organic.plant",
            "organic.skin",
            "organic.hair",
            "organic.fur",
            "organic.scales",
            "organic.leather",
            "organic.wood"
          ],
          "title": "Material Type",
          "description": "Data values and relationships required to describe the look of a CG Asset."
        },
        "provenance": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "CreatedBy": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Participant/properties/Participant"}
              ]
            },
            "createdOn": {"$ref": "#/$defs/Utility/properties/time/properties/dateTime"},
            "Role": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Participant/properties/Role"}
              ]
            },
            "Origin": {
              "oneOf": [
                {"$ref": "#/$defs/core/properties/reference"},
                {"$ref": "#/$defs/Asset/properties/Asset"}
              ]
            },
            "reason": {
              "type": [
                "string",
                "null"
              ]
            },
            "annotation": {"$ref": "#/$defs/Utility/properties/annotation"}
          },
          "title": "Provenance",
          "description": "A record of when something was changed and by whom.",
          "additionalProperties": false
        }
      },
      "additionalProperties": false,
      "title": "Utility Definitions",
      "description": "Common data models and data structures used in multiple places and in multiple ways in a larger system."
    },
    "core": {
      "title": "Core",
      "properties": {
        "reference": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "identifier": {"$ref": "#/$defs/Utility/properties/identifier"}
          },
          "title": "Reference entity",
          "additionalProperties": false,
          "description": "An identifier that references another entity in the graph"
        },
        "rootObject": {
          "type": "object",
          "properties": {
            "Asset": {
              "type": "array",
              "items": {"$ref": "#/$defs/Asset/properties/Asset"},
              "title": "Asset"
            },
            "AssetSC": {
              "type": "array",
              "items": {"$ref": "#/$defs/Asset/properties/AssetSC"},
              "title": "Asset Structural Characteristics"
            },
            "Infrastructure": {
              "type": "array",
              "items": {"$ref": "#/$defs/Infrastructure/properties/Infrastructure"},
              "title": "Infrastructure"
            },
            "InfrastructureSC": {
              "type": "array",
              "items": {"$ref": "#/$defs/Infrastructure/properties/InfrastructureSC"},
              "title": "InfrastructureSC"
            },
            "Character": {
              "type": "array",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/Character"},
              "title": "Character"
            },
            "Context": {
              "type": "array",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/Context"},
              "title": "Context"
            },
            "CreativeWork": {
              "type": "array",
              "title": "Creative Work",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"}
            },
            "Depiction": {
              "type": "array",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"},
              "title": "Context"
            },
            "NarrativeAudio": {
              "type": "array",
              "title": "Narrative Audio",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeAudio"}
            },
            "NarrativeLocation": {
              "type": "array",
              "title": "Narrative Location",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeLocation"}
            },
            "NarrativeObject": {
              "type": "array",
              "title": "Narrative Object",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeObject"}
            },
            "NarrativeScene": {
              "type": "array",
              "title": "Narrative Scene",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeScene"}
            },
            "NarrativeStyling": {
              "type": "array",
              "title": "Narrative Styling",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeStyling"}
            },
            "NarrativeWardrobe": {
              "type": "array",
              "title": "Narrative Wardrobe",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeWardrobe"}
            },
            "ProductionLocation": {
              "type": "array",
              "title": "Production Location",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/ProductionLocation"}
            },
            "ProductionScene": {
              "type": "array",
              "title": "Production Scene",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"}
            },
            "Sequence": {
              "type": "array",
              "title": "Sequence",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"}
            },
            "Slate": {
              "type": "array",
              "title": "Slate",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/Slate"}
            },
            "SpecialAction": {
              "type": "array",
              "title": "Special Action",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/SpecialAction"}
            },
            "Effect": {
              "type": "array",
              "title": "Effect",
              "items": {"$ref": "#/$defs/MediaCreationContext/properties/Effect"}
            },
            "Participant": {
              "type": "array",
              "items": {"$ref": "#/$defs/Participant/properties/Participant"},
              "title": "Participant"
            },
            "Person": {
              "type": "array",
              "items": {"$ref": "#/$defs/Participant/properties/Person"},
              "title": "Person"
            },
            "Department": {
              "type": "array",
              "items": {"$ref": "#/$defs/Participant/properties/Department"},
              "title": "Department"
            },
            "Organization": {
              "type": "array",
              "items": {"$ref": "#/$defs/Participant/properties/Organization"},
              "title": "Organization"
            },
            "Service": {
              "type": "array",
              "items": {"$ref": "#/$defs/Participant/properties/Service"},
              "title": "Service"
            },
            "Role": {
              "type": "array",
              "items": {"$ref": "#/$defs/Participant/properties/Role"},
              "title": "Service"
            },
            "Task": {
              "type": "array",
              "items": {"$ref": "#/$defs/Task/properties/Task"},
              "title": "Task"
            },
            "TaskSC": {
              "type": "array",
              "items": {"$ref": "#/$defs/Task/properties/TaskSC"},
              "title": "TaskSC"
            },
            "Composition": {
              "type": "array",
              "items": {"$ref": "#/$defs/Utility/properties/Composition"},
              "title": "Composition"
            },
            "Location": {
              "type": "array",
              "title": "Location",
              "items": {"$ref": "#/$defs/Utility/properties/Location"}
            }
          },
          "additionalProperties": false
        },
        "rootEntity": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "entityType": {
                  "enum": [
                    "Asset",
                    "AssetSC",
                    "Infrastructure",
                    "InfrastructureSC",
                    "Character",
                    "Context",
                    "CreativeWork",
                    "Depiction",
                    "Effect",
                    "NarrativeAction",
                    "NarrativeAudio",
                    "NarrativeLocation",
                    "NarrativeObject",
                    "NarrativeScene",
                    "NarrativeStyling",
                    "NarrativeWardrobe",
                    "ProductionLocation",
                    "ProductionScene",
                    "Sequence",
                    "Slate",
                    "SpecialAction",
                    "Department",
                    "Organization",
                    "Participant",
                    "Person",
                    "Role",
                    "Service",
                    "Task",
                    "TaskSC",
                    "Composition",
                    "Location"
                  ]
                }
              },
              "required": ["entityType"]
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Asset"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Asset/properties/Asset"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "AssetSC"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Asset/properties/AssetSC"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Infrastructure"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Infrastructure/properties/Infrastructure"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "InfrastructureSC"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Infrastructure/properties/InfrastructureSC"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Character"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/Character"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Context"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/Context"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "CreativeWork"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/CreativeWork"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Depiction"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/Depiction"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "NarrativeAudio"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeAudio"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "NarrativeLocation"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeLocation"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "NarrativeObject"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeObject"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "NarrativeScene"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeScene"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "NarrativeStyling"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeStyling"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "NarrativeWardrobe"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/NarrativeWardrobe"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "ProductionLocation"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/ProductionLocation"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "ProductionScene"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/ProductionScene"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Slate"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/Slate"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "SpecialAction"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/SpecialAction"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Effect"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/Effect"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Sequence"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/MediaCreationContext/properties/Sequence"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Participant"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Participant/properties/Participant"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Role"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Participant/properties/Role"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Person"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Participant/properties/Person"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Department"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Participant/properties/Department"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Organization"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Participant/properties/Organization"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Service"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Participant/properties/Service"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Task"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Task/properties/Task"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "TaskSC"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Task/properties/TaskSC"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Location"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Utility/properties/Location"}
            },
            {
              "if": {
                "type": "object",
                "properties": {
                  "entityType": {"const": "Composition"}
                },
                "required": ["entityType"]
              },
              "then": {"$ref": "#/$defs/Utility/properties/Composition"}
            }
          ]
        },
        "baseEntity": {
          "type": "object",
          "properties": {
            "schemaVersion": {
              "title": "Schema Version",
              "default": "https://movielabs.com/omc/json/schema/v2.6",
              "enum": [
                "https://movielabs.com/omc/json/schema/v2.0",
                "https://movielabs.com/omc/json/schema/v2.1",
                "https://movielabs.com/omc/json/schema/v2.6"
              ],
              "description": "Describes the version of OMC-JSON schema that was used to create this instance."
            },
            "identifier": {
              "title": "Identifier",
              "$ref": "#/$defs/Utility/properties/identifier"
            },
            "name": {
              "type": [
                "string",
                "null"
              ],
              "title": "Name",
              "description": "A name for the entity, this is primarily for human consumption in things like user interfaces. It should not be considered a canonical name."
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "title": "Description",
              "description": "A brief description of the entity, primarily for human consumption."
            },
            "customData": {"$ref": "#/$defs/Utility/properties/customData"},
            "annotation": {"$ref": "#/$defs/Utility/properties/annotation"},
            "tag": {"$ref": "#/$defs/Utility/properties/tag"},
            "entityInfo": {
              "deprecated": true,
              "$comment": "Deprecated in favor of instanceInfo",
              "type": [
                "object",
                "null"
              ],
              "title": "Entity Information",
              "description": "Reserved for future use to describe specific details about the instance of the entity"
            },
            "instanceInfo": {
              "$comment": "Currently specific to the OMC-JSON implementation and should be considered Beta",
              "type": [
                "object",
                "null"
              ],
              "title": "Instance Information",
              "description": "Properties that describe information about this particular instance of an entity.",
              "properties": {
                "createdOn": {
                  "oneOf": [
                    {"$ref": "#/$defs/Utility/properties/time/properties/date"},
                    {"$ref": "#/$defs/Utility/properties/time/properties/dateTime"}
                  ]
                },
                "CreatedBy": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Participant/properties/Participant"}
                  ]
                },
                "lastUpdateOn": {
                  "oneOf": [
                    {"$ref": "#/$defs/Utility/properties/time/properties/date"},
                    {"$ref": "#/$defs/Utility/properties/time/properties/dateTime"}
                  ]
                },
                "LastUpdateBy": {
                  "oneOf": [
                    {"$ref": "#/$defs/core/properties/reference"},
                    {"$ref": "#/$defs/Participant/properties/Participant"}
                  ]
                },
                "customData": {"$ref": "#/$defs/Utility/properties/customData"}
              },
              "additionalProperties": false
            }
          },
          "required": [
            "identifier",
            "schemaVersion"
          ]
        },
        "baseVersion": {
          "type": [
            "object",
            "null"
          ],
          "title": "Version Information",
          "description": "The base properties that describe a version of something (Asset or Composition).",
          "properties": {
            "versionNumber": {
              "type": [
                "string",
                "number",
                "null"
              ],
              "title": "Version Number",
              "description": "A designation indicating a place in a sequence of versions"
            },
            "name": {
              "type": [
                "string",
                "null"
              ],
              "title": "A name for this specific version of the Asset"
            },
            "description": {
              "type": [
                "string",
                "null"
              ],
              "title": "Asset description",
              "description": "A human readable description of the version"
            },
            "annotation": {"$ref": "#/$defs/Utility/properties/annotation"},
            "customData": {"$ref": "#/$defs/Utility/properties/customData"}
          }
        }
      },
      "additionalProperties": false,
      "description": "Sub-schemas used in building the schema that are not intrinsically part of the OMC spec."
    }
  }
}